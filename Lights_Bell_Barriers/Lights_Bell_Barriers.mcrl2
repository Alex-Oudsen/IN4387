sort Lights = struct LIGHTS_ON | LIGHTS_OFF | LIGHTS_CHECK;
     Bell = struct BELL_ON | BELL_OFF | BELL_CHECK;
     Barriers = struct BARRIERS_UP | BARRIERS_DOWN | BARRIERS_CHECK;
     TrainTrack = struct TRAIN_ARRIVING | NO_TRAIN;

act setLightStatus, getLightStatus, comm_lightStatus: Lights;
    setBellStatus, getBellStatus, comm_bellStatus: Bell;
    setBarrierStatus, getBarrierStatus, comm_barrierStatus: Barriers;
    getTrackStatus: TrainTrack;

proc lights(lightStatus: Lights) = 
     (lightStatus == LIGHTS_OFF) -> getTrackStatus(TRAIN_ARRIVING).lights(LIGHTS_ON)
     + (lightStatus == LIGHTS_ON) -> getBellStatus(BELL_OFF).lights(LIGHTS_CHECK)
     + (lightStatus == LIGHTS_CHECK) -> getTrackStatus(TRAIN_ARRIVING).lights(LIGHTS_ON)
     + (lightStatus == LIGHTS_CHECK) -> getTrackStatus(NO_TRAIN).lights(LIGHTS_OFF)
     + setLightStatus(lightStatus).lights();

proc bell(bellStatus: Bell) = 
     (bellStatus == BELL_OFF) -> getLightStatus(LIGHTS_ON).bell(BELL_CHECK)
     + (bellStatus == BELL_ON) -> getBarrierStatus(BARRIERS_UP).bell(BELL_CHECK)
     + (bellStatus == BELL_CHECK) -> getTrackStatus(NO_TRAIN).bell(BELL_OFF)
     + (bellStatus == BELL_CHECK) -> getTrackStatus(TRAIN_ARRIVING).bell(BELL_ON)
     + setBellStatus(bellStatus).bell();

proc barriers(barrierStatus: Barriers) = 
     (barrierStatus == BARRIERS_UP) -> getBellStatus(BELL_ON).barriers(BARRIERS_CHECK)
     + (barrierStatus == BARRIERS_CHECK) -> getTrackStatus(NO_TRAIN).barriers(BARRIERS_UP)
     + (barrierStatus == BARRIERS_CHECK) -> getTrackStatus(TRAIN_ARRIVING).barriers(BARRIERS_DOWN)
     + (barrierStatus == BARRIERS_DOWN) -> getTrackStatus(NO_TRAIN).barriers(BARRIERS_UP)
     + setBarrierStatus(barrierStatus).barriers();

init 
     hide({comm_lightStatus, comm_bellStatus, comm_barrierStatus},
          allow({comm_lightStatus, comm_bellStatus, comm_barrierStatus, getTrackStatus},
               comm({setLightStatus|getLightStatus -> comm_lightStatus,
                     setBellStatus|getBellStatus -> comm_bellStatus,
                     setBarrierStatus|getBarrierStatus -> comm_barrierStatus},
                        lights(LIGHTS_OFF)
                        ||bell(BELL_OFF)
                        ||barriers(BARRIERS_UP)
               )
          )
     );